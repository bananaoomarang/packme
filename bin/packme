#!/usr/bin/env node

var Path     = require('path');
var Fs       = require('fs');
var Bluebird = require('bluebird');
var Mkdirp   = Bluebird.promisify(require('mkdirp'));

Bluebird.promisifyAll(Fs);

var argv = require('yargs')
  .usage('Usage: packme <package> <infrom> <outto>')
  .demand(3)
  .argv;

var package = argv._[0];
var infrom  = argv._[1];
var outto   = argv._[2];

var pkgdir  = Path.join(process.cwd(), package);

var _in = require(Path.join('../ins',  infrom))
var out = require(Path.join('../outs', outto));

var pkgCache = {};

function main(pkg, i, o) {
    return i(pkg)
        .tap(function (result) {
            return Bluebird.all(
                Object
                  .keys(result.depends)
                  .map(function (dep) {
                      if(pkgCache[dep])
                          return dep;

                      pkgCache[dep] = true;

                      return main(dep, _in, out);
                  })
            );
        })
        .then(o)
        .then(function (result) {
            return Bluebird.all(
                Object.keys(result)
            )
            .tap(Mkdirp.bind(null, pkg))
            .map(function (key) {
                return Fs.writeFileAsync(pkg + '/' + key, result[key]);
            });
        });
}

main(package, _in, out);

